#!/usr/bin/python3
import sys
import os

import parse
import mutator
import thread_manager

from queue import Queue
from log import logger, CRASH_DIR

crashFile = 'bad.txt'

if '--crashfile' in sys.argv:
    index = sys.argv.index('--crashfile')
    crashFile = sys.argv[index + 1]
    
def handleCrash(crashInput: bytes) -> bool:
    global crashFile
    if crashInput is not None:
        logger.info("Found crash")
        with open(os.path.join(CRASH_DIR, crashFile), "wb") as badtxt:
            badtxt.write(crashInput)
        logger.info('Bad input written to ' + os.path.join(CRASH_DIR, crashFile))
        return True
    return False

def checkArgs():
    if len(sys.argv) < 3:
        logger.info(f"Usage: {sys.argv[0]} binaryfilename inputfilename")
        exit(0)

if __name__ == "__main__":
    checkArgs()

    binary = sys.argv[1]
    inputFileName = sys.argv[2]

    inputDict = parse.getDictFromInput(inputFileName)
    thread_manager.setBinary(binary)
    
    logger.info('Starting fuzzer...')

    crashInput = thread_manager.fuzzMyLife(inputDict)
    if handleCrash(crashInput):
        logger.info("done")
    else:
        logger.info("failed :'(")